{"version":3,"sources":["services/mineService.js","pages/login/login.js"],"names":["requestSendCode","tel","a","Http","fetch_get","api","SEND_CODE_API","result","code","console","log","data","timer","login","props","servercode","countAction","clearInterval","setInterval","count","state","setState","sended","this","window","mui","toast","then","flag","ev","target","value","alert","localStorage","setItem","history","push","className","id","maxLength","placeholder","onChange","chageAction","bind","style","background","onClick","sendCode","loginAction","Component"],"mappings":"6OAIaA,EAAe,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACVC,IAAKC,UAAUC,IAAIC,cAAc,QAAQL,GAD/B,UAEV,KADfM,EADyB,QAEnBC,KAFmB,uBAI3BC,QAAQC,IAAI,yBAJe,kBAKpBH,EAAOI,KAAKH,MALQ,cAQ3BC,QAAQC,IAAI,sCARe,kBASpB,MAToB,4CAAH,sD,8CCA5B,IAAIE,EAAQ,KACSC,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KASVC,WAAa,SAVK,EAiClBC,YAAc,WACVC,cAAcL,GACdA,EAAQM,aAAY,WAAK,IACpBC,EAAS,EAAKC,MAAdD,MACM,IAARA,IACC,EAAKE,SAAS,CACVF,MAAM,GACNG,QAAO,IAEX,EAAKP,WAAa,SAClBE,cAAcL,IAElB,EAAKS,SAAS,CACVF,QAASA,MAEX,MA9CF,EAAKC,MAAM,CACPZ,KAAK,GACLc,QAAQ,EACRrB,IAAI,GACJkB,MAAM,IANI,E,sMAaKI,KAAKH,MAAnBE,E,EAAAA,O,EAAOrB,I,uBAERuB,OAAOC,IAAIC,MAAM,sE,8BAGlBJ,E,uBACCE,OAAOC,IAAIC,MAAM,iG,0BAGZ1B,EAAgBuB,KAAKH,MAAMnB,KACjC0B,MAAK,SAAAnB,GACNC,QAAQC,IAAI,kCAASF,GACrB,EAAKO,WAAaP,EAClB,EAAKa,SAAS,CACZC,QAAO,IAET,EAAKN,iB,wIAsBCY,EAAKC,GACH,QAAPD,EACCL,KAAKF,SAAS,CACVpB,IAAK4B,EAAGC,OAAOC,QAEP,SAAPH,GACLL,KAAKF,SAAS,CACVb,KAAMqB,EAAGC,OAAOC,U,oCAMxB,IAAIR,KAAKH,MAAMZ,OAAOe,KAAKH,MAAMnB,IAE7B,OADA+B,MAAM,yFACC,EAERT,KAAKH,MAAMZ,OAASe,KAAKR,YACxBkB,aAAaC,QAAQ,WAAWX,KAAKH,MAAMnB,KAC3CsB,KAAKT,MAAMqB,QAAQC,KAAK,UAExBJ,MAAM,6D,+BAIJ,IAAD,EACyBT,KAAKH,MAA9BZ,EADA,EACAA,KAAKc,EADL,EACKA,OAAOrB,EADZ,EACYA,IAAIkB,EADhB,EACgBA,MACrB,OACI,yBAAKkB,UAAU,OAAOC,GAAG,SACrB,wBAAID,UAAU,0BAAd,gBACA,yBAAKA,UAAU,WACZ,kDACA,0EAEA,yBAAKA,UAAU,SACX,2BACG,0BAAMA,UAAU,yBAChB,2BACAE,UAAU,KACVC,YAAY,uCACZT,MAAO9B,EACPwC,SAAUlB,KAAKmB,YAAYC,KAAKpB,KAAK,UAExC,2BACG,0BAAMc,UAAU,sBAChB,2BACAE,UAAU,IACVC,YAAY,uCACZT,MAAOvB,EACPiC,SAAUlB,KAAKmB,YAAYC,KAAKpB,KAAK,UACrC,0BAAMc,UAAU,WAChBO,MAAO,CAACC,WAAWvB,EAAO,OAAO,WACjCwB,QAASvB,KAAKwB,SAASJ,KAAKpB,OACzBD,EAASH,EAAM,IAAK,mCAG1B,2BACI,0BAAMkB,UAAU,UAAhB,mCAEJ,uBAAGA,UAAU,MACZS,QAASvB,KAAKyB,YAAYL,KAAKpB,OAC5B,iDAKX,yBAAKc,UAAU,cACX,uBAAGA,UAAU,SAAb,oFAGA,uBAAGA,UAAU,QACT,0BAAMA,UAAU,qBAChB,0BAAMA,UAAU,yBAChB,0BAAMA,UAAU,yBAEpB,uBAAGA,UAAU,YAAb,uCACS,sEADT,SAC6B,iE,GAhIdY","file":"static/js/17.e7b7f0b4.chunk.js","sourcesContent":["import api from '../utils/api'\nimport Http from '../utils/Http'\n\n// 发送验证码 ( get )\nexport const requestSendCode = async (tel)=>{\n  let result = await Http.fetch_get(api.SEND_CODE_API+\"?tel=\"+tel);\n  if(result.code === 0){\n    //发送成功\n    console.log(\"验证码...\");\n    return result.data.code;\n  }else {\n    //发送失败\n    console.log(\"发送失败了....\");\n    return null;\n  }\n}\n\n// 注册\nexport const requestRegiester = async (tel, password)=>{\n  let result = await Http.fetch_post(api.REGIESTER_API, {tel, password});\n  if(result.data.code === 0){\n    return null;\n  }else{\n    return result.data.message;\n  }\n}\n\n// 密码登录\nexport const requestLoginByPassword = async(tel, password)=>{\n  let result = await Http.post(api.LOGIN_API, {tel, type: 'password', value: password});\n  if(result.data.code === 0){\n    return null;\n  }else{\n    return result.data.message;\n  }\n}\n\n// 验证吗登录\nexport const requestLoginByCode = async (tel)=>{\n  let result = await Http.post(api.LOGIN_API, {tel, type: 'code'});\n  console.log(result);\n  if(result.data.code === 0){\n    return null;\n  }else{\n    return result.data.message;\n  }\n}\n\n\nexport default {\n  requestSendCode,\n  requestRegiester,\n  requestLoginByPassword,\n  requestLoginByCode\n}","import React, { Component } from 'react'\r\nimport {requestSendCode} from \"../../services/mineService\" \r\nimport \"./style.scss\"\r\n\r\nlet timer = null;\r\nexport default class login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            code:\"\",\r\n            sended: false,\r\n            tel:\"\",\r\n            count:60\r\n        }\r\n    }\r\n    \r\n    servercode = \"./././\";\r\n\r\n    async sendCode(){\r\n        let {sended,tel} = this.state;\r\n        if(!tel){\r\n            window.mui.toast(\"请先输入您的手机号码！\");\r\n            return;\r\n        }\r\n        if(sended){\r\n            window.mui.toast(\"验证码已发送，60s内请勿重复操作！\");\r\n            return;\r\n        }\r\n        let rs = requestSendCode(this.state.tel);\r\n        rs.then(code=>{\r\n          console.log(\"验证码发送:\",code);\r\n          this.servercode = code;\r\n          this.setState({\r\n            sended:true\r\n          });\r\n          this.countAction();\r\n        });\r\n    }\r\n\r\n    countAction = ()=>{\r\n        clearInterval(timer)\r\n        timer = setInterval(()=>{\r\n        let {count} = this.state;\r\n        if(count===0){\r\n            this.setState({\r\n                count:60,\r\n                sended:false\r\n            });\r\n            this.servercode = \"./././\";\r\n            clearInterval(timer);\r\n        }\r\n        this.setState({\r\n            count: --count\r\n        })\r\n        },1000);\r\n    }\r\n\r\n    chageAction(flag,ev){\r\n        if(flag===\"tel\"){\r\n            this.setState({\r\n                tel: ev.target.value\r\n            })\r\n        }else if(flag===\"code\"){\r\n            this.setState({\r\n                code: ev.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    loginAction(){\r\n        if(!this.state.code||!this.state.tel){\r\n            alert(\"必须完整输入手机号和验证码！\");\r\n            return false;\r\n        }\r\n        if(this.state.code === this.servercode){\r\n            localStorage.setItem(\"curruser\",this.state.tel);\r\n            this.props.history.push('/mine');\r\n        }else{\r\n            alert(\"手机号或验证码错误!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {code,sended,tel,count} = this.state;\r\n        return (\r\n            <div className=\"page\" id=\"login\">\r\n                <h3 className=\"toptitle border-bottom\">登陆</h3>\r\n                <div className=\"content\">\r\n                   <h3>在这里</h3> \r\n                   <h3>收获知识和学友</h3> \r\n\r\n                   <div className=\"panel\">\r\n                       <p>\r\n                          <span className=\"iconfont icon-yonghu\"></span> \r\n                          <input \r\n                          maxLength=\"11\" \r\n                          placeholder=\"请输入手机号\" \r\n                          value={tel}\r\n                          onChange={this.chageAction.bind(this,\"tel\")}/>\r\n                       </p>\r\n                       <p>\r\n                          <span className=\"iconfont icon-suo\"></span> \r\n                          <input \r\n                          maxLength=\"6\" \r\n                          placeholder=\"请输入验证码\" \r\n                          value={code}\r\n                          onChange={this.chageAction.bind(this,\"code\")}/>\r\n                          <span className=\"sendcode\"\r\n                          style={{background:sended?\"#999\":\"#0ed30e\"}}\r\n                          onClick={this.sendCode.bind(this)}>\r\n                            {sended? (count+\"s\"):\"发送验证码\"}\r\n                          </span>\r\n                       </p>\r\n                       <p>\r\n                           <span className=\"forget\">忘记密码？</span>\r\n                       </p>\r\n                       <p className=\"btn\"\r\n                        onClick={this.loginAction.bind(this)}>\r\n                           <span>登陆</span>\r\n                        </p>\r\n                   </div>\r\n                </div>\r\n\r\n                <div className=\"thirdparty\">\r\n                    <p className=\"title\">\r\n                        ———— 第三方登陆 ————\r\n                    </p>\r\n                    <p className=\"logo\">\r\n                        <span className=\"iconfont icon-qq\"></span>\r\n                        <span className=\"iconfont icon-weixin\"></span>\r\n                        <span className=\"iconfont icon-weibo\"></span>\r\n                    </p>\r\n                    <p className=\"protocol\">      \r\n                       登录表示同意<span>《用户协议》</span>和<span>隐私政策</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}